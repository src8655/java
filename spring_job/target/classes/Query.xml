<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="job">


	<!-- Member -->
	<select id="MemberExistEmail" parameterType="com.myjob.data.MemberData" resultType="int">
		select count(*) FROM MIN_JOB_MEMBER where EMAIL=#{email}
	</select>
	<insert id="MemberInsert" parameterType="com.myjob.data.MemberData">
		INSERT INTO MIN_JOB_MEMBER(EMAIL,PASSWORD,NAME,PHONE1,PHONE2,PHONE3,QUEST,ANSWER,COMPANY,COMPANY_CATE,COMPANY_NUM,ORDERS,DATES)
		VALUES(
		#{email},
		#{password},
		#{name},
		#{phone1},
		#{phone2},
		#{phone3},
		#{quest},
		#{answer},
		#{company},
		#{company_cate},
		#{company_num},
		#{orders},
		#{dates}
		)
	</insert>
	<select id="MemberLogin" parameterType="com.myjob.data.MemberData" resultType="com.myjob.data.MemberData">
		select * FROM MIN_JOB_MEMBER where EMAIL=#{email, jdbcType=VARCHAR} and password=#{password}
	</select>
	<select id="MemberExistLogin" parameterType="com.myjob.data.MemberData" resultType="int">
		select count(*) FROM MIN_JOB_MEMBER where EMAIL=#{email} and password=#{password}
	</select>
	
	
	
	
	<!-- Company -->
	<insert id="CompanyInsert" parameterType="com.myjob.data.CompanyData">
		INSERT INTO MIN_JOB_COMPANY(MEMBER_NO,URL,INFO,NAME,FOUNDING,COUNT,COMPANY_TYPE,MONEY,ADDR,FILE1,FILE2)
		VALUES(
		#{member_no},
		#{url},
		#{info},
		#{name},
		#{founding},
		#{count},
		#{company_type},
		#{money},
		#{addr},
		#{file1},
		#{file2}
		)
	</insert>
	<select id="CompanyGetArticles" parameterType="java.util.Map" resultType="com.myjob.data.CompanyData">
		select NO,MEMBER_NO,COMPANY,COMPANY_CATE,COMPANY_NUM,URL,INFO,NAME,FOUNDING,COUNT,COMPANY_TYPE,MONEY,ADDR,FILE1,FILE2
		from (select rownum as rnum,a.* from (
		select bb.NO as NO,MEMBER_NO,COMPANY,COMPANY_CATE,COMPANY_NUM,URL,INFO,bb.NAME as NAME,FOUNDING,COUNT,COMPANY_TYPE,MONEY,ADDR,FILE1,FILE2
		from MIN_JOB_MEMBER aa, MIN_JOB_COMPANY bb
		where aa.NO=bb.MEMBER_NO
		and COMPANY like '%'||#{searchValue}||'%'
		order by aa.NO desc) a) where rnum between #{start} and #{end}
	</select>
	<select id="CompanyGetCount" parameterType="java.util.Map" resultType="int">
		select count(*)
		from MIN_JOB_MEMBER aa, min_job_company bb
		where aa.NO=bb.MEMBER_NO
		and COMPANY like '%'||#{searchValue}||'%'
	</select>
	<select id="CompanyGetArticle" parameterType="int" resultType="com.myjob.data.CompanyData">
		select bb.NO as NO,MEMBER_NO,COMPANY,COMPANY_CATE,COMPANY_NUM,URL,INFO,bb.NAME as NAME,FOUNDING,COUNT,COMPANY_TYPE,MONEY,ADDR,FILE1,FILE2
		from MIN_JOB_MEMBER aa, MIN_JOB_COMPANY bb
		where aa.NO=bb.MEMBER_NO
		and MEMBER_NO=${member_no}
	</select>
	<update id="CompanyUpdate" parameterType="com.myjob.data.CompanyData">
		update MIN_JOB_COMPANY set
		URL=#{url},
		INFO=#{info},
		NAME=#{name},
		FOUNDING=#{founding},
		COUNT=#{count},
		COMPANY_TYPE=#{company_type},
		MONEY=#{money},
		ADDR=#{addr},
		FILE1=#{file1},
		FILE2=#{file2}
		where MEMBER_NO=#{member_no}
	</update>
	
	
	
	
	
	
	
	
	
	
	<!-- Count -->
	<insert id="CountInsert" parameterType="com.myjob.data.CountData">
		insert into MIN_JOB_COUNT(DATES,MEMBER_NO)
		values(#{dates},#{member_no})
	</insert>
	<select id="CountGetCount" parameterType="com.myjob.data.CountData" resultType="int">
		select count(*) from MIN_JOB_COUNT where DATES=#{dates} and MEMBER_NO=#{member_no}
	</select>
	
	
	
	
	
	
	
	
	
	
	<!-- Review -->
	<insert id="ReviewInsert" parameterType="com.myjob.data.ReviewData">
		insert into MIN_JOB_REVIEW(TYPES,STARS,STARS1,STARS2,STARS3,STARS4,STARS5,MEMO1,MEMO2,MEMO3,MEMBER_NO,DATES,WRITER_NO,PROF,STATUS)
		values(
		#{types},
		#{stars},
		#{stars1},
		#{stars2},
		#{stars3},
		#{stars4},
		#{stars5},
		#{memo1},
		#{memo2},
		#{memo3},
		#{member_no},
		#{dates},
		#{writer_no},
		#{prof},
		#{status}
		)
	</insert>
	<select id="ReviewGetCount" parameterType="java.util.Map" resultType="int">
		select count(*) from MIN_JOB_REVIEW where MEMBER_NO=#{member_no}
	</select>
	<select id="ReviewGetArticles" parameterType="java.util.Map" resultType="com.myjob.data.ReviewData">
		select NO,TYPES,STARS,STARS1,STARS2,STARS3,STARS4,STARS5,MEMO1,MEMO2,MEMO3,MEMBER_NO,DATES,WRITER_NO,PROF,STATUS
		from (select rownum as rnum,a.* from (
		select NO,TYPES,STARS,STARS1,STARS2,STARS3,STARS4,STARS5,MEMO1,MEMO2,MEMO3,MEMBER_NO,DATES,WRITER_NO,PROF,STATUS
		from MIN_JOB_REVIEW
		where MEMBER_NO=#{member_no}
		order by NO desc) a) where rnum between #{start} and #{end}
	</select>
	<select id="ReviewGetMyCount" parameterType="java.util.Map" resultType="int">
		select count(*) from MIN_JOB_REVIEW where MEMBER_NO=#{member_no} and WRITER_NO=#{writer_no}
	</select>
	<select id="ReviewGetAllStars" parameterType="java.util.Map" resultType="com.myjob.data.ReviewData">
		select 
		sum(STARS) as STARS,
		sum(STARS1) as STARS1,
		sum(STARS2) as STARS2,
		sum(STARS3) as STARS3,
		sum(STARS4) as STARS4,
		sum(STARS5) as STARS5
		from MIN_JOB_REVIEW where MEMBER_NO=#{member_no}
	</select>
	
	
	
	<!-- Income -->
	<insert id="IncomeInsert">
		insert into MIN_JOB_INCOME(MEMBER_NO,WRITER_NO,POSITIONS,MONEY,DATES,PROF,EMPL,STATUS)
		values(
		#{member_no},
		#{writer_no},
		#{positions},
		#{money},
		#{dates},
		#{prof},
		#{empl},
		#{status}
		)
	</insert>
	<select id="IncomeGetMyCount" parameterType="java.util.Map" resultType="int">
		select count(*) from MIN_JOB_INCOME where MEMBER_NO=#{member_no} and WRITER_NO=#{writer_no}
	</select>
	<select id="IncomeGetCount" parameterType="java.util.Map" resultType="int">
		select count(*) from MIN_JOB_INCOME where MEMBER_NO=#{member_no}
	</select>
	<select id="IncomeGetArticles" parameterType="java.util.Map" resultType="com.myjob.data.IncomeData">
		select POSITIONS, avg(MONEY) as MONEY, count(*) as COUNT
		from MIN_JOB_INCOME
		where MEMBER_NO=#{member_no}
		group by POSITIONS
		order by POSITIONS asc
	</select>
	<select id="IncomeGetMoneyMaxMin" parameterType="java.util.Map" resultType="java.util.HashMap">
		select max(MONEY) as MAXS, min(MONEY) as MINS, avg(MONEY) as AVGS from
		(select POSITIONS, avg(MONEY) as MONEY, count(*) as COUNT
		from MIN_JOB_INCOME
		where MEMBER_NO=#{member_no}
		group by POSITIONS
		order by POSITIONS asc)
	</select>
	<select id="IncomeGetLank" parameterType="java.util.Map" resultType="int">
		select RNUM from
		(select rownum as RNUM, a.*
		from (select MEMBER_NO, avg(MONEY) as MONEY
				from MIN_JOB_INCOME
		        group by MEMBER_NO
		        order by MONEY desc) a) where MEMBER_NO=#{member_no}
	</select>
	
	
	
	
	
	<!-- Interview -->
	<insert id="InterviewInsert" parameterType="com.myjob.data.InterviewData">
		insert into MIN_JOB_INTERVIEW(PROF,POSITIONS,DIFFICULTY,INTERVIEWDATE,INTERVIEWDIR,MEMO1,MEMO2,MEMO3,MEMO4,MEMO5,INTERVIEWRESULT,INTERVIEWEX,DATES,STATUS,MEMBER_NO,WRITER_NO)
		values(
		#{prof},
		#{positions},
		#{difficulty},
		#{interviewdate},
		#{interviewdir},
		#{memo1},
		#{memo2},
		#{memo3},
		#{memo4},
		#{memo5},
		#{interviewresult},
		#{interviewex},
		#{dates},
		#{status},
		#{member_no},
		#{writer_no}
		)
	</insert>
	<select id="InterviewGetCount" parameterType="java.util.Map" resultType="int">
		select count(*) from MIN_JOB_INTERVIEW where MEMBER_NO=#{member_no}
	</select>
	<select id="InterviewGetMyCount" parameterType="java.util.Map" resultType="int">
		select count(*) from MIN_JOB_INTERVIEW where MEMBER_NO=#{member_no} and WRITER_NO=${writer_no}
	</select>
	<select id="InterviewGetArticles" parameterType="java.util.Map" resultType="com.myjob.data.InterviewData">
		select NO,PROF,POSITIONS,DIFFICULTY,INTERVIEWDATE,INTERVIEWDIR,MEMO1,MEMO2,MEMO3,MEMO4,MEMO5,INTERVIEWRESULT,INTERVIEWEX,DATES,STATUS,MEMBER_NO,WRITER_NO
		from (select rownum as rnum,a.* from (
		select NO,PROF,POSITIONS,DIFFICULTY,INTERVIEWDATE,INTERVIEWDIR,MEMO1,MEMO2,MEMO3,MEMO4,MEMO5,INTERVIEWRESULT,INTERVIEWEX,DATES,STATUS,MEMBER_NO,WRITER_NO
		from MIN_JOB_INTERVIEW
		where MEMBER_NO=#{member_no}
		order by NO desc) a) where rnum between #{start} and #{end}
	</select>
	<select id="InterviewGetDifficulty" parameterType="java.util.Map" resultType="double">
		select avg(DIFFICULTY) as DIFFICULTY
		from MIN_JOB_INTERVIEW
		where MEMBER_NO=#{member_no}
	</select>
	<select id="InterviewGetInterviewdir" parameterType="java.util.Map" resultType="int">
		select count(*) as COUNT
		from MIN_JOB_INTERVIEW
		where MEMBER_NO=#{member_no}
		and INTERVIEWDIR=#{interviewdir}
	</select>
	<select id="InterviewGetInterviewex" parameterType="java.util.Map" resultType="int">
		select count(*) as COUNT
		from MIN_JOB_INTERVIEW
		where MEMBER_NO=#{member_no}
		and INTERVIEWEX=#{interviewex}
	</select>
	<select id="InterviewGetInterviewresult" parameterType="java.util.Map" resultType="int">
		select count(*) as COUNT
		from MIN_JOB_INTERVIEW
		where MEMBER_NO=#{member_no}
		and INTERVIEWRESULT=#{interviewresult}
	</select>
	
	
	
	
	<!-- 

	List
	<insert id="List_insert" parameterType="net.mytour.data.List_Data" >
		INSERT INTO MIN_TOUR_LIST(SUBJECT,CITY,DAYS,AIR,MONEY,MONEYS,MEMO1,MEMO2,CATEGORY,BUY,HIT,DATES,FILE1) VALUES(
		#{subject},
		#{city},
		#{days},
		#{air},
		#{money},
		#{moneys},
		#{memo1},
		#{memo2},
		#{category},
		#{buy},
		#{hit},
		#{dates},
		#{file1}
		)
	</insert>
	<select id="List_getArticles" parameterType="java.util.Map" resultType="net.mytour.data.List_Data">
		select NO,SUBJECT,CITY,DAYS,AIR,MONEY,MONEYS,MEMO1,MEMO2,CATEGORY,BUY,HIT,DATES,FILE1
		from (select rownum as rnum,a.* from (select * from MIN_TOUR_LIST where SUBJECT like '%'||#{searchs}||'%'
		<if test="category != -1"> and CATEGORY=#{category} </if>
	 	order by NO desc) a) where rnum between #{start} and #{end}
	</select>
	<select id="List_getCount" parameterType="java.util.Map" resultType="int">
		select count(*) from MIN_TOUR_LIST where SUBJECT like '%'||#{searchs}||'%'
	 	<if test="category != -1"> and CATEGORY=#{category} </if>
	</select>
	<select id="List_getArticle" parameterType="int" resultType="net.mytour.data.List_Data">
		select NO,SUBJECT,CITY,DAYS,AIR,MONEY,MONEYS,MEMO1,MEMO2,CATEGORY,BUY,HIT,DATES,FILE1
		from MIN_TOUR_LIST where NO=#{no}
	</select>
	<select id="List_getHit" parameterType="int" resultType="int">
		select HIT from MIN_TOUR_LIST where NO=#{no}
	</select>
	<update id="List_setHit" parameterType="java.util.Map">
		update MIN_TOUR_LIST set HIT=#{hit} where NO=#{no}
	</update> -->
	
	
	
	
	
<!-- 

 -->
</mapper>